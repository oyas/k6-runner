name: Run k6
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on:
  workflow_dispatch:
    inputs:
      script-path:
        description: 'k6 script'
        required: true
        default: 'k6/script.js'
        type: choice
        options:
        - k6/script.js
        - dummy
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      memo:
        description: 'MEMO'
        required: false

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Show inputs
        run: |
          echo "SCRIPT_PATH = $SCRIPT_PATH"
          echo "TAGS = $TAGS"
          echo "MEMO = $MEMO"
          echo "TOKEN = $GITHUB_TOKEN"
        env:
          SCRIPT_PATH: ${{ inputs.script-path }}
          TAGS: ${{ inputs.tags }}
          MEMO: ${{ inputs.memo }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Start k6
        run: |
          arr=(${REPOSITORY//// })
          owner=${arr[0]}
          repo=${arr[1]}
          hash=${{ github.sha }}

          set -x

          curl -X POST https://k6-runner-c7uvvb7taq-an.a.run.app/start \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"owner\": \"$owner\",
              \"repo\": \"$repo\",
              \"path\": \"$SCRIPT_PATH\",
              \"commitHash\": \"$hash\",
              \"memo\": \"$MEMO\"
            }" | jq
        env:
          REPOSITORY: ${{ github.repository }}
          SCRIPT_PATH: ${{ inputs.script-path }}
          TAGS: ${{ inputs.tags }}
          MEMO: ${{ inputs.memo }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Waiting for the job to finish
        run: |
          echo "Dashboard: https://k6-runner-c7uvvb7taq-an.a.run.app/"
          echo "k6-runner menu: https://k6-runner-c7uvvb7taq-an.a.run.app/menu"
          while true
          do
            result=`curl -s -m 2 https://k6-runner-c7uvvb7taq-an.a.run.app/status`
            echo -en "\r$result"
            k6status=`echo "$result" | jq -r '.status'`
            if [[ $k6status == "STOP" ]]; then
              break
            fi
            sleep 5
          done
        env:
          SCRIPT_PATH: ${{ inputs.script-path }}
          TAGS: ${{ inputs.tags }}
          MEMO: ${{ inputs.memo }}
